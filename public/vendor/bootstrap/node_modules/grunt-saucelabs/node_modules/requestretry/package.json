{
  "name": "requestretry",
  "description": "request-retry wrap nodejs request to retry http(s) requests in case of error",
  "version": "1.2.2",
  "author": {
    "name": "Francois-Guillaume Ribreau",
    "email": "npm@fgribreau.com",
    "url": "http://fgribreau.com"
  },
  "contributors": [
    {
      "name": "juliendangers",
      "email": "dev@juliencrestin.com"
    }
  ],
  "repository": {
    "url": "https://github.com/FGRibreau/node-request-retry"
  },
  "main": "index.js",
  "scripts": {
    "test": "mocha test"
  },
  "license": "MIT",
  "dependencies": {
    "fg-lodash": "0.0.2",
    "request": "2.51.x"
  },
  "devDependencies": {
    "chai": "~1.9.1",
    "mocha": "~1.18.2"
  },
  "readme": "# Request-retry [![Deps](https://david-dm.org/FGRibreau/node-request-retry.png)](https://david-dm.org/FGRibreau/node-request-retry) [![Build Status](https://drone.io/github.com/FGRibreau/node-request-retry/status.png)](https://drone.io/github.com/FGRibreau/node-request-retry/latest)\n\n[![npm](https://nodei.co/npm/requestretry.png)](https://npmjs.org/package/requestretry)\n\nWhen the connection fails with one of `ECONNRESET`, `ENOTFOUND`, `ESOCKETTIMEDOUT`, `ETIMEDOUT`, `ECONNREFUSED`, `EHOSTUNREACH`, `EPIPE` or when an HTTP 5xx error occurrs, the request will automatically be re-attempted as these are often recoverable errors and will go away on retry.\n\n## Usage\n\nRequest-retry is a drop-in replacement for [request](https://github.com/mikeal/request) but adds two new options `maxAttempts` and `retryDelay`.\n\n```javascript\nvar request = require('requestretry');\n\nrequest({\n  url: 'https://api.domain.com/v1/a/b'\n  json:true,\n\n  // The above parameters are specific to Request-retry\n  maxAttempts: 5,   // (default) try 5 times\n  retryDelay: 5000,  // (default) wait for 5s before trying again\n  retryStrategy: request.RetryStrategies.HTTPOrNetworkError // (default) retry on 5xx or network errors\n}, function(err, response, body){\n  // this callback will only be called when the request succeeded or after maxAttempts or on error\n});\n```\n\n## Installation\n\nInstall with [npm](https://npmjs.org/package/requestretry).\n\n    npm install --save requestretry\n\n## How to define your own retry strategy\n\n```\n/**\n * @param  {Null | Object} err\n * @param  {Object} response\n * @return {Boolean} true if the request should be retried\n */\nfunction myRetryStrategy(err, response){\n  // retry the request if we had an error or if the response was a 'Bad Gateway'\n  return err ||Â response.statusCode === 502;\n}\n\nrequest({\n  url: 'https://api.domain.com/v1/a/b'\n  json:true,\n  retryStrategy: myRetryStrategy\n}, function(err, response, body){\n  // this callback will only be called when the request succeeded or after maxAttempts or on error\n});\n```\n\n## Todo\n\n- Tests\n- Use an EventEmitter to notify retries\n\n## Changelog\n\n<a name=\"v1.2.2\" />\n[v1.2.2](#v1.2.2)\n\n  - update `request` to 2.51.0\n\n<a name=\"v1.2.1\" />\n[v1.2.1](#v1.2.1)\n\n  - add support for 'write' request method by @juliendangers\n\n<a name=\"v1.2.0\" />\n[v1.2.0](#v1.2.0)\n\n  - support for user-defined retry strategies\n  - added `request.RetryStrategies.HTTPError`, `request.RetryStrategies.NetworkError` and `request.RetryStrategies.HTTPOrNetworkError`\n\n<a name=\"v1.1.0\" />\n[v1.1.0](#v1.1.0)\n\n  - support for 'end', 'on', 'emit', 'once', 'setMaxListeners', 'start', 'removeListener', 'pipe' request methods by @juliendangers\n\n<a name=\"v1.0.4\" />\n[v1.0.4](#v1.0.4)\n\n  - added `EPIPE`\n\n<a name=\"v1.0.3\" />\n[v1.0.3](#v1.0.3)\n\n  - added `EHOSTUNREACH`\n\n<a name=\"v1.0.2\" />\n[v1.0.2](#v1.0.2)\n\n  - upgraded `request` to 2.44.0 (19/09/2014)\n  - callback is now optional\n\n<a name=\"v1.0.1\" />\n[v1.0.1](#v1.0.1): \n\n  - added `cancelable` as deps\n\n<a name=\"v1.0.0\" />\n[v1.0.0](#v1.0.0):\n\n  - request now yield an Request instance with a `.abort()` method.\n\n<a name=\"v0.0.1\" />\n[v0.0.1](#v0.0.1) \n\n  - initial commit\n\nCopyright 2014, [Francois-Guillaume Ribreau](http://fgribreau.com) (npm@fgribreau.com)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/FGRibreau/node-request-retry/issues"
  },
  "_id": "requestretry@1.2.2",
  "dist": {
    "shasum": "2947a260f401c24448089d2cf702fdbd27a742b0"
  },
  "_from": "requestretry@~1.2.2",
  "_resolved": "https://registry.npmjs.org/requestretry/-/requestretry-1.2.2.tgz"
}
